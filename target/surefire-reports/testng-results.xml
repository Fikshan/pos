<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-21T11:40:11 IST" name="Suite" finished-at="2024-10-21T11:40:44 IST" duration-ms="33755">
    <groups>
    </groups>
    <test started-at="2024-10-21T11:40:11 IST" name="TestQA" finished-at="2024-10-21T11:40:32 IST" duration-ms="21333">
      <class name="script.DemoX">
        <test-method is-config="true" signature="bm(java.lang.reflect.Method)[pri:0, instance:script.DemoX@5ab956d7]" started-at="2024-10-21T11:40:32 IST" name="bm" finished-at="2024-10-21T11:40:32 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.DemoX.createUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="createUser()[pri:0, instance:script.DemoX@5ab956d7]" started-at="2024-10-21T11:40:32 IST" name="createUser" finished-at="2024-10-21T11:40:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method is-config="true" signature="bm(java.lang.reflect.Method)[pri:0, instance:script.DemoX@5ab956d7]" started-at="2024-10-21T11:40:32 IST" name="bm" finished-at="2024-10-21T11:40:32 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.DemoX.deleteUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="deleteUser()[pri:0, instance:script.DemoX@5ab956d7]" started-at="2024-10-21T11:40:32 IST" name="deleteUser" finished-at="2024-10-21T11:40:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
      </class> <!-- script.DemoX -->
      <class name="script.Demo4">
        <test-method is-config="true" signature="bm()[pri:0, instance:script.Demo4@2892d68]" started-at="2024-10-21T11:40:32 IST" name="bm" finished-at="2024-10-21T11:40:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="createUser()[pri:0, instance:script.Demo4@2892d68]" started-at="2024-10-21T11:40:32 IST" name="createUser" finished-at="2024-10-21T11:40:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
      </class> <!-- script.Demo4 -->
      <class name="script.Demo2">
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.Demo2@d86a6f]" started-at="2024-10-21T11:40:22 IST" name="preCondition" finished-at="2024-10-21T11:40:30 IST" duration-ms="8488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.Demo2.testB()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[config.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testB()[pri:0, instance:script.Demo2@d86a6f]" started-at="2024-10-21T11:40:30 IST" name="testB" finished-at="2024-10-21T11:40:31 IST" duration-ms="58" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at script.Demo2.testB(Demo2.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.Demo2@d86a6f]" started-at="2024-10-21T11:40:31 IST" name="postCondition" finished-at="2024-10-21T11:40:32 IST" duration-ms="1313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testB status=FAILURE method=Demo2.testB()[pri:0, instance:script.Demo2@d86a6f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- script.Demo2 -->
      <class name="script.Demo1">
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.Demo1@55a147cc]" started-at="2024-10-21T11:40:11 IST" name="preCondition" finished-at="2024-10-21T11:40:17 IST" duration-ms="6651" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.Demo1.testA()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[config.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testA()[pri:0, instance:script.Demo1@55a147cc]" started-at="2024-10-21T11:40:17 IST" name="testA" finished-at="2024-10-21T11:40:20 IST" duration-ms="2411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.Demo1@55a147cc]" started-at="2024-10-21T11:40:20 IST" name="postCondition" finished-at="2024-10-21T11:40:22 IST" duration-ms="2285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA status=SUCCESS method=Demo1.testA()[pri:0, instance:script.Demo1@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- script.Demo1 -->
    </test> <!-- TestQA -->
    <test started-at="2024-10-21T11:40:11 IST" name="TestP" finished-at="2024-10-21T11:40:44 IST" duration-ms="33755">
      <class name="script.DemoX">
        <test-method is-config="true" signature="bm(java.lang.reflect.Method)[pri:0, instance:script.DemoX@7bba5817]" started-at="2024-10-21T11:40:44 IST" name="bm" finished-at="2024-10-21T11:40:44 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.DemoX.createUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="createUser()[pri:0, instance:script.DemoX@7bba5817]" started-at="2024-10-21T11:40:44 IST" name="createUser" finished-at="2024-10-21T11:40:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method is-config="true" signature="bm(java.lang.reflect.Method)[pri:0, instance:script.DemoX@7bba5817]" started-at="2024-10-21T11:40:44 IST" name="bm" finished-at="2024-10-21T11:40:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.DemoX.deleteUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="deleteUser()[pri:0, instance:script.DemoX@7bba5817]" started-at="2024-10-21T11:40:44 IST" name="deleteUser" finished-at="2024-10-21T11:40:44 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
      </class> <!-- script.DemoX -->
      <class name="script.Demo4">
        <test-method is-config="true" signature="bm()[pri:0, instance:script.Demo4@712625fd]" started-at="2024-10-21T11:40:44 IST" name="bm" finished-at="2024-10-21T11:40:44 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="createUser()[pri:0, instance:script.Demo4@712625fd]" started-at="2024-10-21T11:40:44 IST" name="createUser" finished-at="2024-10-21T11:40:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
      </class> <!-- script.Demo4 -->
      <class name="script.Demo2">
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.Demo2@33065d67]" started-at="2024-10-21T11:40:32 IST" name="preCondition" finished-at="2024-10-21T11:40:42 IST" duration-ms="10270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.Demo2.testB()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testB()[pri:0, instance:script.Demo2@33065d67]" started-at="2024-10-21T11:40:42 IST" name="testB" finished-at="2024-10-21T11:40:42 IST" duration-ms="40" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at script.Demo2.testB(Demo2.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.Demo2@33065d67]" started-at="2024-10-21T11:40:42 IST" name="postCondition" finished-at="2024-10-21T11:40:44 IST" duration-ms="2342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testB status=FAILURE method=Demo2.testB()[pri:0, instance:script.Demo2@33065d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- script.Demo2 -->
      <class name="script.Demo1">
        <test-method is-config="true" signature="initReport()[pri:0, instance:script.Demo1@cb0755b]" started-at="2024-10-21T11:40:10 IST" name="initReport" finished-at="2024-10-21T11:40:11 IST" duration-ms="332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initReport -->
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.Demo1@cb0755b]" started-at="2024-10-21T11:40:11 IST" name="preCondition" finished-at="2024-10-21T11:40:27 IST" duration-ms="16022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.Demo1.testA()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testA()[pri:0, instance:script.Demo1@cb0755b]" started-at="2024-10-21T11:40:27 IST" name="testA" finished-at="2024-10-21T11:40:27 IST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.Demo1@cb0755b]" started-at="2024-10-21T11:40:27 IST" name="postCondition" finished-at="2024-10-21T11:40:32 IST" duration-ms="4803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA status=SUCCESS method=Demo1.testA()[pri:0, instance:script.Demo1@cb0755b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:script.Demo1@cb0755b]" started-at="2024-10-21T11:40:44 IST" name="generateReport" finished-at="2024-10-21T11:40:45 IST" duration-ms="954" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- script.Demo1 -->
    </test> <!-- TestP -->
  </suite> <!-- Suite -->
</testng-results>
